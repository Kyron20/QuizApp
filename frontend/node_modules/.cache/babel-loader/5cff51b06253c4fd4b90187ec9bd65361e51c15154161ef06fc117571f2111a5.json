{"ast":null,"code":"// src/api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api'; // Adjust this if your backend is hosted elsewhere\n\n// src/api.js\nexport const createQuiz = async (title, creatorId, questions) => {\n  try {\n    const response = await fetch('http://localhost:5000/api/quizzes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n        // Include token if required\n        // 'Authorization': `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        title,\n        creatorId,\n        questions\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create quiz');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error creating quiz:', error);\n    throw error;\n  }\n};\nexport const getQuiz = quizId => {\n  return axios.get(`${API_URL}/quizzes/${quizId}`);\n};\nexport const updateQuiz = (quizId, title, questions) => {\n  return axios.put(`${API_URL}/quizzes/${quizId}`, {\n    title,\n    questions\n  });\n};\nexport const getQuizList = () => {\n  return axios.get(`${API_URL}/quizzes`); // Ensure this endpoint exists in your backend\n};","map":{"version":3,"names":["axios","API_URL","createQuiz","title","creatorId","questions","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","getQuiz","quizId","get","updateQuiz","put","getQuizList"],"sources":["C:/Users/koolk/Documents/QuizApp/frontend/src/api.js"],"sourcesContent":["// src/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api'; // Adjust this if your backend is hosted elsewhere\r\n\r\n\r\n// src/api.js\r\nexport const createQuiz = async (title, creatorId, questions) => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/quizzes', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // Include token if required\r\n        // 'Authorization': `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ title, creatorId, questions }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to create quiz');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error creating quiz:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const getQuiz = (quizId) => {\r\n  return axios.get(`${API_URL}/quizzes/${quizId}`);\r\n};\r\n\r\nexport const updateQuiz = (quizId, title, questions) => {\r\n  return axios.put(`${API_URL}/quizzes/${quizId}`, { title, questions });\r\n};\r\n\r\nexport const getQuizList = () => {\r\n  return axios.get(`${API_URL}/quizzes`); // Ensure this endpoint exists in your backend\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAG7C;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,KAAK,EAAEC,SAAS,EAAEC,SAAS,KAAK;EAC/D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;QAChB;QACA;MACF,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,KAAK;QAAEC,SAAS;QAAEC;MAAU,CAAC;IACtD,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAGD,OAAO,MAAME,OAAO,GAAIC,MAAM,IAAK;EACjC,OAAOnB,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,YAAYkB,MAAM,EAAE,CAAC;AAClD,CAAC;AAED,OAAO,MAAME,UAAU,GAAGA,CAACF,MAAM,EAAEhB,KAAK,EAAEE,SAAS,KAAK;EACtD,OAAOL,KAAK,CAACsB,GAAG,CAAC,GAAGrB,OAAO,YAAYkB,MAAM,EAAE,EAAE;IAAEhB,KAAK;IAAEE;EAAU,CAAC,CAAC;AACxE,CAAC;AAED,OAAO,MAAMkB,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAOvB,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,UAAU,CAAC,CAAC,CAAC;AAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}