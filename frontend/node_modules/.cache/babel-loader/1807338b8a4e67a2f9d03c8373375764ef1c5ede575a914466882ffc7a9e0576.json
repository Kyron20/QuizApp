{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koolk\\\\Documents\\\\QuizApp\\\\frontend\\\\src\\\\components\\\\login.js\";\n// src/components/Login.js\nimport React from 'react';\nimport GoogleLoginButton from './GoogleLoginButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  const handleSuccess = async response => {\n    try {\n      // Extract token from response\n      const {\n        credential\n      } = response;\n\n      // Send token to your backend for verification and user info\n      const userInfo = await fetch('/api/auth/google-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: credential\n        })\n      });\n      const data = await userInfo.json();\n\n      // Use data to manage the user session (e.g., store user info, redirect, etc.)\n      console.log('User Info:', data);\n      alert('Login successful');\n    } catch (error) {\n      console.error('Login failed:', error);\n      alert('Login failed');\n    }\n  };\n  const handleFailure = error => {\n    console.error('Login failed:', error);\n    alert('Login failed');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md p-8 bg-white rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-center mb-6\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mb-6\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLoginButton, {\n          onSuccess: handleSuccess,\n          onFailure: handleFailure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","GoogleLoginButton","jsxDEV","_jsxDEV","Login","handleSuccess","response","credential","userInfo","fetch","method","headers","body","JSON","stringify","token","data","json","console","log","alert","error","handleFailure","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onFailure","_c","$RefreshReg$"],"sources":["C:/Users/koolk/Documents/QuizApp/frontend/src/components/login.js"],"sourcesContent":["// src/components/Login.js\r\nimport React from 'react';\r\nimport GoogleLoginButton from './GoogleLoginButton';\r\n\r\nfunction Login() {\r\n  const handleSuccess = async (response) => {\r\n    try {\r\n      // Extract token from response\r\n      const { credential } = response;\r\n\r\n      // Send token to your backend for verification and user info\r\n      const userInfo = await fetch('/api/auth/google-login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ token: credential }),\r\n      });\r\n\r\n      const data = await userInfo.json();\r\n\r\n      // Use data to manage the user session (e.g., store user info, redirect, etc.)\r\n      console.log('User Info:', data);\r\n      alert('Login successful');\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      alert('Login failed');\r\n    }\r\n  };\r\n\r\n  const handleFailure = (error) => {\r\n    console.error('Login failed:', error);\r\n    alert('Login failed');\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"w-full max-w-md p-8 bg-white rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-bold text-center mb-6\">Login</h2>\r\n        <div className=\"flex justify-center mb-6\">\r\n          <GoogleLoginButton onSuccess={handleSuccess} onFailure={handleFailure} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,KAAKA,CAAA,EAAG;EACf,MAAMC,aAAa,GAAG,MAAOC,QAAQ,IAAK;IACxC,IAAI;MACF;MACA,MAAM;QAAEC;MAAW,CAAC,GAAGD,QAAQ;;MAE/B;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAER;QAAW,CAAC;MAC5C,CAAC,CAAC;MAEF,MAAMS,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;;MAElC;MACAC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,IAAI,CAAC;MAC/BI,KAAK,CAAC,kBAAkB,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCD,KAAK,CAAC,cAAc,CAAC;IACvB;EACF,CAAC;EAED,MAAME,aAAa,GAAID,KAAK,IAAK;IAC/BH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrCD,KAAK,CAAC,cAAc,CAAC;EACvB,CAAC;EAED,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,2DAA2D;IAAAC,QAAA,eACxErB,OAAA;MAAKoB,SAAS,EAAC,mDAAmD;MAAAC,QAAA,gBAChErB,OAAA;QAAIoB,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9DzB,OAAA;QAAKoB,SAAS,EAAC,0BAA0B;QAAAC,QAAA,eACvCrB,OAAA,CAACF,iBAAiB;UAAC4B,SAAS,EAAExB,aAAc;UAACyB,SAAS,EAAER;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACG,EAAA,GAzCQ3B,KAAK;AA2Cd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}