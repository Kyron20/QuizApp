{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koolk\\\\Documents\\\\QuizApplication\\\\QuizApp\\\\frontend\\\\src\\\\components\\\\editquiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getQuizByCreatorAndId, updateQuiz } from '../api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditQuiz() {\n  _s();\n  const {\n    quizId\n  } = useParams(); // Get quiz ID from URL params\n  const [creatorId, setCreatorId] = useState(''); // Creator ID state\n  const [title, setTitle] = useState('');\n  const [questions, setQuestions] = useState([{\n    question: '',\n    options: ['', '', '', ''],\n    correctAnswer: ''\n  }]);\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  useEffect(() => {\n    // Fetch the quiz data when component mounts\n    const fetchQuiz = async () => {\n      const storedCreatorId = localStorage.getItem('creatorId'); // Retrieve the creator ID from local storage or some other means\n      setCreatorId(storedCreatorId);\n      if (!storedCreatorId) {\n        alert('Creator ID not found');\n        return;\n      }\n      try {\n        const response = await getQuizByCreatorAndId(quizId, storedCreatorId);\n        const quiz = response.data;\n        setTitle(quiz.title);\n        setQuestions(quiz.questions);\n      } catch (error) {\n        console.error(error);\n        alert('Error fetching quiz data');\n      }\n    };\n    fetchQuiz();\n  }, [quizId]);\n  const handleAddQuestion = () => {\n    setQuestions([...questions, {\n      question: '',\n      options: ['', '', '', ''],\n      correctAnswer: ''\n    }]);\n  };\n  const handleQuestionChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedQuestions = [...questions];\n    updatedQuestions[index] = {\n      ...updatedQuestions[index],\n      [name]: value\n    };\n    setQuestions(updatedQuestions);\n  };\n  const handleOptionChange = (index, optionIndex, value) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index].options[optionIndex] = value;\n    setQuestions(updatedQuestions);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await updateQuiz(quizId, title, questions, creatorId); // Pass creatorId when updating\n      alert('Quiz updated successfully');\n      navigate('/'); // Redirect to home or quiz list after successful update\n    } catch (error) {\n      console.error(error);\n      alert('Error updating quiz');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Edit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"w-full max-w-lg bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quiz Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true,\n        className: \"w-full mb-4 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question\",\n          placeholder: `Question ${index + 1}`,\n          value: q.question,\n          onChange: e => handleQuestionChange(index, e),\n          required: true,\n          className: \"w-full mb-2 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), q.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Option ${optionIndex + 1}`,\n          value: option,\n          onChange: e => handleOptionChange(index, optionIndex, e.target.value),\n          required: true,\n          className: \"w-full mb-2 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        }, optionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"correctAnswer\",\n          placeholder: \"Correct Answer\",\n          value: q.correctAnswer,\n          onChange: e => handleQuestionChange(index, e),\n          required: true,\n          className: \"w-full mb-4 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddQuestion,\n          className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          children: \"Add Another Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n        children: \"Update Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(EditQuiz, \"ggMt9/z+HTmq5DVVCDVKF4Udc0M=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditQuiz;\nexport default EditQuiz;\nvar _c;\n$RefreshReg$(_c, \"EditQuiz\");","map":{"version":3,"names":["React","useState","useEffect","getQuizByCreatorAndId","updateQuiz","useParams","useNavigate","jsxDEV","_jsxDEV","EditQuiz","_s","quizId","creatorId","setCreatorId","title","setTitle","questions","setQuestions","question","options","correctAnswer","navigate","fetchQuiz","storedCreatorId","localStorage","getItem","alert","response","quiz","data","error","console","handleAddQuestion","handleQuestionChange","index","e","name","value","target","updatedQuestions","handleOptionChange","optionIndex","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","map","q","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/koolk/Documents/QuizApplication/QuizApp/frontend/src/components/editquiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getQuizByCreatorAndId, updateQuiz } from '../api';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nfunction EditQuiz() {\r\n  const { quizId } = useParams(); // Get quiz ID from URL params\r\n  const [creatorId, setCreatorId] = useState(''); // Creator ID state\r\n  const [title, setTitle] = useState('');\r\n  const [questions, setQuestions] = useState([{ question: '', options: ['', '', '', ''], correctAnswer: '' }]);\r\n  const navigate = useNavigate(); // Hook for programmatic navigation\r\n\r\n  useEffect(() => {\r\n    // Fetch the quiz data when component mounts\r\n    const fetchQuiz = async () => {\r\n      const storedCreatorId = localStorage.getItem('creatorId'); // Retrieve the creator ID from local storage or some other means\r\n      setCreatorId(storedCreatorId);\r\n      if (!storedCreatorId) {\r\n        alert('Creator ID not found');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await getQuizByCreatorAndId(quizId, storedCreatorId);\r\n        const quiz = response.data;\r\n        setTitle(quiz.title);\r\n        setQuestions(quiz.questions);\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('Error fetching quiz data');\r\n      }\r\n    };\r\n\r\n    fetchQuiz();\r\n  }, [quizId]);\r\n\r\n  const handleAddQuestion = () => {\r\n    setQuestions([...questions, { question: '', options: ['', '', '', ''], correctAnswer: '' }]);\r\n  };\r\n\r\n  const handleQuestionChange = (index, e) => {\r\n    const { name, value } = e.target;\r\n    const updatedQuestions = [...questions];\r\n    updatedQuestions[index] = { ...updatedQuestions[index], [name]: value };\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleOptionChange = (index, optionIndex, value) => {\r\n    const updatedQuestions = [...questions];\r\n    updatedQuestions[index].options[optionIndex] = value;\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await updateQuiz(quizId, title, questions, creatorId); // Pass creatorId when updating\r\n      alert('Quiz updated successfully');\r\n      navigate('/'); // Redirect to home or quiz list after successful update\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error updating quiz');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Edit Quiz</h2>\r\n      <form onSubmit={handleSubmit} className=\"w-full max-w-lg bg-white p-6 rounded-lg shadow-lg\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Quiz Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n          className=\"w-full mb-4 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        />\r\n        {questions.map((q, index) => (\r\n          <div key={index} className=\"mb-4\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"question\"\r\n              placeholder={`Question ${index + 1}`}\r\n              value={q.question}\r\n              onChange={(e) => handleQuestionChange(index, e)}\r\n              required\r\n              className=\"w-full mb-2 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            {q.options.map((option, optionIndex) => (\r\n              <input\r\n                key={optionIndex}\r\n                type=\"text\"\r\n                placeholder={`Option ${optionIndex + 1}`}\r\n                value={option}\r\n                onChange={(e) => handleOptionChange(index, optionIndex, e.target.value)}\r\n                required\r\n                className=\"w-full mb-2 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            ))}\r\n            <input\r\n              type=\"text\"\r\n              name=\"correctAnswer\"\r\n              placeholder=\"Correct Answer\"\r\n              value={q.correctAnswer}\r\n              onChange={(e) => handleQuestionChange(index, e)}\r\n              required\r\n              className=\"w-full mb-4 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleAddQuestion}\r\n              className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n            >\r\n              Add Another Question\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n        >\r\n          Update Quiz\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditQuiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}