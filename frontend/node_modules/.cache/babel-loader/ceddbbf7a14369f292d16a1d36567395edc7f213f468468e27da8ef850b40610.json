{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koolk\\\\Documents\\\\QuizApplication\\\\QuizApp\\\\frontend\\\\src\\\\components\\\\editquiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom'; // Use useParams for route params\nimport { getQuizList, getQuizById, updateQuiz } from '../api'; // Adjust imports as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditQuiz() {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const [selectedQuiz, setSelectedQuiz] = useState(null);\n  const [title, setTitle] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const navigate = useNavigate();\n  const {\n    quizId\n  } = useParams();\n  useEffect(() => {\n    const fetchQuizzes = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n      const decodedToken = jwtDecode(token);\n      const creatorId = decodedToken.username; // Assuming username as creatorId\n\n      try {\n        const response = await getQuizList(creatorId);\n        setQuizzes(response.data);\n      } catch (error) {\n        console.error('Error fetching quizzes:', error);\n        setQuizzes([]);\n      }\n    };\n    fetchQuizzes();\n  }, []);\n  useEffect(() => {\n    if (quizId) {\n      const fetchQuiz = async () => {\n        try {\n          const response = await getQuizById(quizId);\n          const quiz = response.data;\n          setTitle(quiz.title);\n          setQuestions(quiz.questions);\n        } catch (error) {\n          console.error('Error fetching quiz:', error);\n        }\n      };\n      fetchQuiz();\n    }\n  }, [quizId]);\n  const handleEditClick = id => {\n    navigate(`/edit-quiz/${id}`);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await updateQuiz(quizId, {\n        title,\n        questions\n      });\n      alert('Quiz updated successfully');\n      navigate('/'); // Redirect to home or quiz list\n    } catch (error) {\n      console.error('Error updating quiz:', error);\n      alert('Error updating quiz');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: !quizId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6\",\n        children: \"Your Quizzes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\",\n        children: quizzes.map(quiz => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-lg cursor-pointer hover:bg-gray-100 transition flex flex-col justify-between\",\n          onClick: () => handleEditClick(quiz._id),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold mb-2\",\n            children: quiz.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-sm\",\n            children: [\"Questions: \", quiz.questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, quiz._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"w-full max-w-lg bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Edit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Quiz Title\",\n        className: \"w-full mb-4 p-2 border border-gray-300 rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: q.question,\n          onChange: e => {\n            const updatedQuestions = [...questions];\n            updatedQuestions[index].question = e.target.value;\n            setQuestions(updatedQuestions);\n          },\n          placeholder: `Question ${index + 1}`,\n          className: \"w-full mb-2 p-2 border border-gray-300 rounded-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(EditQuiz, \"Uik9ef3V+S66xhmJFhwYg42Q9vI=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditQuiz;\nexport default EditQuiz;\nvar _c;\n$RefreshReg$(_c, \"EditQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","getQuizList","getQuizById","updateQuiz","jsxDEV","_jsxDEV","EditQuiz","_s","quizzes","setQuizzes","selectedQuiz","setSelectedQuiz","title","setTitle","questions","setQuestions","navigate","quizId","fetchQuizzes","token","localStorage","getItem","decodedToken","jwtDecode","creatorId","username","response","data","error","console","fetchQuiz","quiz","handleEditClick","id","handleSubmit","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_id","length","onSubmit","type","value","onChange","target","placeholder","q","index","question","updatedQuestions","_c","$RefreshReg$"],"sources":["C:/Users/koolk/Documents/QuizApplication/QuizApp/frontend/src/components/editquiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom'; // Use useParams for route params\r\nimport { getQuizList, getQuizById, updateQuiz } from '../api'; // Adjust imports as needed\r\n\r\nfunction EditQuiz() {\r\n  const [quizzes, setQuizzes] = useState([]);\r\n  const [selectedQuiz, setSelectedQuiz] = useState(null);\r\n  const [title, setTitle] = useState('');\r\n  const [questions, setQuestions] = useState([]);\r\n  const navigate = useNavigate();\r\n  const { quizId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchQuizzes = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) return;\r\n\r\n      const decodedToken = jwtDecode(token);\r\n      const creatorId = decodedToken.username; // Assuming username as creatorId\r\n\r\n      try {\r\n        const response = await getQuizList(creatorId);\r\n        setQuizzes(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching quizzes:', error);\r\n        setQuizzes([]);\r\n      }\r\n    };\r\n\r\n    fetchQuizzes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (quizId) {\r\n      const fetchQuiz = async () => {\r\n        try {\r\n          const response = await getQuizById(quizId);\r\n          const quiz = response.data;\r\n          setTitle(quiz.title);\r\n          setQuestions(quiz.questions);\r\n        } catch (error) {\r\n          console.error('Error fetching quiz:', error);\r\n        }\r\n      };\r\n\r\n      fetchQuiz();\r\n    }\r\n  }, [quizId]);\r\n\r\n  const handleEditClick = (id) => {\r\n    navigate(`/edit-quiz/${id}`);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await updateQuiz(quizId, { title, questions });\r\n      alert('Quiz updated successfully');\r\n      navigate('/'); // Redirect to home or quiz list\r\n    } catch (error) {\r\n      console.error('Error updating quiz:', error);\r\n      alert('Error updating quiz');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      {!quizId ? (\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold mb-6\">Your Quizzes</h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n            {quizzes.map((quiz) => (\r\n              <div\r\n                key={quiz._id}\r\n                className=\"bg-white p-6 rounded-lg shadow-lg cursor-pointer hover:bg-gray-100 transition flex flex-col justify-between\"\r\n                onClick={() => handleEditClick(quiz._id)}\r\n              >\r\n                <h3 className=\"font-bold mb-2\">{quiz.title}</h3>\r\n                <p className=\"text-gray-600 text-sm\">Questions: {quiz.questions.length}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <form onSubmit={handleSubmit} className=\"w-full max-w-lg bg-white p-6 rounded-lg shadow-lg\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Edit Quiz</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"Quiz Title\"\r\n            className=\"w-full mb-4 p-2 border border-gray-300 rounded-lg\"\r\n          />\r\n          {questions.map((q, index) => (\r\n            <div key={index} className=\"mb-4\">\r\n              <input\r\n                type=\"text\"\r\n                value={q.question}\r\n                onChange={(e) => {\r\n                  const updatedQuestions = [...questions];\r\n                  updatedQuestions[index].question = e.target.value;\r\n                  setQuestions(updatedQuestions);\r\n                }}\r\n                placeholder={`Question ${index + 1}`}\r\n                className=\"w-full mb-2 p-2 border border-gray-300 rounded-lg\"\r\n              />\r\n              {/* Add options and other fields similarly */}\r\n            </div>\r\n          ))}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n          >\r\n            Save Changes\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditQuiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}