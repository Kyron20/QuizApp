{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koolk\\\\Documents\\\\QuizApplication\\\\QuizApp\\\\frontend\\\\src\\\\components\\\\editquiz.js\",\n  _s = $RefreshSig$();\n// src/components/EditQuiz.js\nimport React, { useState, useEffect } from 'react';\nimport { getQuiz, updateQuiz } from '../api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditQuiz() {\n  _s();\n  const {\n    quizId\n  } = useParams(); // Get quiz ID from URL params\n  const [title, setTitle] = useState('');\n  const [questions, setQuestions] = useState([{\n    question: '',\n    options: ['', '', '', ''],\n    answer: ''\n  }]);\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  useEffect(() => {\n    // Fetch the quiz data when component mounts\n    const fetchQuiz = async () => {\n      try {\n        const response = await getQuiz(quizId);\n        const quiz = response.data;\n        setTitle(quiz.title);\n        setQuestions(quiz.questions);\n      } catch (error) {\n        console.error(error);\n        alert('Error fetching quiz data');\n      }\n    };\n    fetchQuiz();\n  }, [quizId]);\n  const handleAddQuestion = () => {\n    setQuestions([...questions, {\n      question: '',\n      options: ['', '', '', ''],\n      answer: ''\n    }]);\n  };\n  const handleQuestionChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedQuestions = [...questions];\n    updatedQuestions[index] = {\n      ...updatedQuestions[index],\n      [name]: value\n    };\n    setQuestions(updatedQuestions);\n  };\n  const handleOptionChange = (index, optionIndex, value) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index].options[optionIndex] = value;\n    setQuestions(updatedQuestions);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await updateQuiz(quizId, title, questions);\n      alert('Quiz updated successfully');\n      navigate('/'); // Redirect to home or quiz list after successful update\n    } catch (error) {\n      console.error(error);\n      alert('Error updating quiz');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quiz Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question\",\n          placeholder: `Question ${index + 1}`,\n          value: q.question,\n          onChange: e => handleQuestionChange(index, e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), q.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Option ${optionIndex + 1}`,\n          value: option,\n          onChange: e => handleOptionChange(index, optionIndex, e.target.value),\n          required: true\n        }, optionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"answer\",\n          placeholder: \"Correct Answer\",\n          value: q.answer,\n          onChange: e => handleQuestionChange(index, e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddQuestion,\n          children: \"Add Another Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(EditQuiz, \"g9JNjr/CMDt7t4RN7xK55hGb+3M=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditQuiz;\nexport default EditQuiz;\nvar _c;\n$RefreshReg$(_c, \"EditQuiz\");","map":{"version":3,"names":["React","useState","useEffect","getQuiz","updateQuiz","useParams","useNavigate","jsxDEV","_jsxDEV","EditQuiz","_s","quizId","title","setTitle","questions","setQuestions","question","options","answer","navigate","fetchQuiz","response","quiz","data","error","console","alert","handleAddQuestion","handleQuestionChange","index","e","name","value","target","updatedQuestions","handleOptionChange","optionIndex","handleSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","map","q","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/koolk/Documents/QuizApplication/QuizApp/frontend/src/components/editquiz.js"],"sourcesContent":["// src/components/EditQuiz.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getQuiz, updateQuiz } from '../api';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nfunction EditQuiz() {\r\n  const { quizId } = useParams(); // Get quiz ID from URL params\r\n  const [title, setTitle] = useState('');\r\n  const [questions, setQuestions] = useState([{ question: '', options: ['', '', '', ''], answer: '' }]);\r\n  const navigate = useNavigate(); // Hook for programmatic navigation\r\n\r\n  useEffect(() => {\r\n    // Fetch the quiz data when component mounts\r\n    const fetchQuiz = async () => {\r\n      try {\r\n        const response = await getQuiz(quizId);\r\n        const quiz = response.data;\r\n        setTitle(quiz.title);\r\n        setQuestions(quiz.questions);\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('Error fetching quiz data');\r\n      }\r\n    };\r\n\r\n    fetchQuiz();\r\n  }, [quizId]);\r\n\r\n  const handleAddQuestion = () => {\r\n    setQuestions([...questions, { question: '', options: ['', '', '', ''], answer: '' }]);\r\n  };\r\n\r\n  const handleQuestionChange = (index, e) => {\r\n    const { name, value } = e.target;\r\n    const updatedQuestions = [...questions];\r\n    updatedQuestions[index] = { ...updatedQuestions[index], [name]: value };\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleOptionChange = (index, optionIndex, value) => {\r\n    const updatedQuestions = [...questions];\r\n    updatedQuestions[index].options[optionIndex] = value;\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await updateQuiz(quizId, title, questions);\r\n      alert('Quiz updated successfully');\r\n      navigate('/'); // Redirect to home or quiz list after successful update\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error updating quiz');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Quiz</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Quiz Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        {questions.map((q, index) => (\r\n          <div key={index}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"question\"\r\n              placeholder={`Question ${index + 1}`}\r\n              value={q.question}\r\n              onChange={(e) => handleQuestionChange(index, e)}\r\n              required\r\n            />\r\n            {q.options.map((option, optionIndex) => (\r\n              <input\r\n                key={optionIndex}\r\n                type=\"text\"\r\n                placeholder={`Option ${optionIndex + 1}`}\r\n                value={option}\r\n                onChange={(e) => handleOptionChange(index, optionIndex, e.target.value)}\r\n                required\r\n              />\r\n            ))}\r\n            <input\r\n              type=\"text\"\r\n              name=\"answer\"\r\n              placeholder=\"Correct Answer\"\r\n              value={q.answer}\r\n              onChange={(e) => handleQuestionChange(index, e)}\r\n              required\r\n            />\r\n            <button type=\"button\" onClick={handleAddQuestion}>Add Another Question</button>\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\">Update Quiz</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditQuiz;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,UAAU,QAAQ,QAAQ;AAC5C,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC;IAAEe,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC,CAAC;EACrG,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCJ,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlB,OAAO,CAACQ,MAAM,CAAC;QACtC,MAAMW,IAAI,GAAGD,QAAQ,CAACE,IAAI;QAC1BV,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC;QACpBG,YAAY,CAACO,IAAI,CAACR,SAAS,CAAC;MAC9B,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBE,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC;EAEZ,MAAMgB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BZ,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE;MAAEE,QAAQ,EAAE,EAAE;MAAEC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC,CAAC;EACvF,CAAC;EAED,MAAMU,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,CAAC,KAAK;IACzC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,MAAMC,gBAAgB,GAAG,CAAC,GAAGpB,SAAS,CAAC;IACvCoB,gBAAgB,CAACL,KAAK,CAAC,GAAG;MAAE,GAAGK,gBAAgB,CAACL,KAAK,CAAC;MAAE,CAACE,IAAI,GAAGC;IAAM,CAAC;IACvEjB,YAAY,CAACmB,gBAAgB,CAAC;EAChC,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAACN,KAAK,EAAEO,WAAW,EAAEJ,KAAK,KAAK;IACxD,MAAME,gBAAgB,GAAG,CAAC,GAAGpB,SAAS,CAAC;IACvCoB,gBAAgB,CAACL,KAAK,CAAC,CAACZ,OAAO,CAACmB,WAAW,CAAC,GAAGJ,KAAK;IACpDjB,YAAY,CAACmB,gBAAgB,CAAC;EAChC,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOP,CAAC,IAAK;IAChCA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMlC,UAAU,CAACO,MAAM,EAAEC,KAAK,EAAEE,SAAS,CAAC;MAC1CY,KAAK,CAAC,2BAA2B,CAAC;MAClCP,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBE,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACElB,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnC,OAAA;MAAMoC,QAAQ,EAAEP,YAAa;MAAAE,QAAA,gBAC3B/B,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBd,KAAK,EAAEpB,KAAM;QACbmC,QAAQ,EAAGjB,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACG,MAAM,CAACD,KAAK,CAAE;QAC1CgB,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EACD7B,SAAS,CAACmC,GAAG,CAAC,CAACC,CAAC,EAAErB,KAAK,kBACtBrB,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UACEqC,IAAI,EAAC,MAAM;UACXd,IAAI,EAAC,UAAU;UACfe,WAAW,EAAE,YAAYjB,KAAK,GAAG,CAAC,EAAG;UACrCG,KAAK,EAAEkB,CAAC,CAAClC,QAAS;UAClB+B,QAAQ,EAAGjB,CAAC,IAAKF,oBAAoB,CAACC,KAAK,EAAEC,CAAC,CAAE;UAChDkB,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,EACDO,CAAC,CAACjC,OAAO,CAACgC,GAAG,CAAC,CAACE,MAAM,EAAEf,WAAW,kBACjC5B,OAAA;UAEEqC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAE,UAAUV,WAAW,GAAG,CAAC,EAAG;UACzCJ,KAAK,EAAEmB,MAAO;UACdJ,QAAQ,EAAGjB,CAAC,IAAKK,kBAAkB,CAACN,KAAK,EAAEO,WAAW,EAAEN,CAAC,CAACG,MAAM,CAACD,KAAK,CAAE;UACxEgB,QAAQ;QAAA,GALHZ,WAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMjB,CACF,CAAC,eACFnC,OAAA;UACEqC,IAAI,EAAC,MAAM;UACXd,IAAI,EAAC,QAAQ;UACbe,WAAW,EAAC,gBAAgB;UAC5Bd,KAAK,EAAEkB,CAAC,CAAChC,MAAO;UAChB6B,QAAQ,EAAGjB,CAAC,IAAKF,oBAAoB,CAACC,KAAK,EAAEC,CAAC,CAAE;UAChDkB,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFnC,OAAA;UAAQqC,IAAI,EAAC,QAAQ;UAACO,OAAO,EAAEzB,iBAAkB;UAAAY,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GA3BvEd,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4BV,CACN,CAAC,eACFnC,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjC,EAAA,CAlGQD,QAAQ;EAAA,QACIJ,SAAS,EAGXC,WAAW;AAAA;AAAA+C,EAAA,GAJrB5C,QAAQ;AAoGjB,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}