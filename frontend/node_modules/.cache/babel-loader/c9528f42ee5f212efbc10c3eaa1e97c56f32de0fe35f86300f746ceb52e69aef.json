{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koolk\\\\Documents\\\\QuizApplication\\\\QuizApp\\\\frontend\\\\src\\\\components\\\\quizlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getQuizList } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizList({\n  user\n}) {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuizzes = async () => {\n      if (user && user.username) {\n        try {\n          const response = await getQuizList(user.username);\n          console.log('Fetched quizzes:', response.data); // Log the response\n          // Ensure the response data is always an array\n          if (Array.isArray(response.data)) {\n            setQuizzes(response.data);\n          } else {\n            console.error('Unexpected response format:', response.data);\n            setQuizzes([]);\n          }\n        } catch (error) {\n          console.error('Error fetching quizzes:', error);\n          setQuizzes([]);\n        }\n      }\n    };\n    fetchQuizzes();\n  }, [user]);\n  const handleQuizClick = title => {\n    navigate(`/join-quiz?title=${encodeURIComponent(title)}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Your Quizzes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\",\n      children: quizzes.map(quiz => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg cursor-pointer hover:bg-gray-100 transition\",\n        onClick: () => handleQuizClick(quiz.title),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2\",\n          children: quiz.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-sm\",\n          children: [\"Created by: \", quiz.creatorId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-sm\",\n          children: [\"Questions: \", quiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, quiz._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizList, \"jPrdyU9I4zOKNszaSHtUMQk0ByQ=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizList;\nexport default QuizList;\nvar _c;\n$RefreshReg$(_c, \"QuizList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getQuizList","jsxDEV","_jsxDEV","QuizList","user","_s","quizzes","setQuizzes","navigate","fetchQuizzes","username","response","console","log","data","Array","isArray","error","handleQuizClick","title","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","quiz","onClick","creatorId","questions","length","_id","_c","$RefreshReg$"],"sources":["C:/Users/koolk/Documents/QuizApplication/QuizApp/frontend/src/components/quizlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getQuizList } from '../api';\r\n\r\nfunction QuizList({ user }) {\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchQuizzes = async () => {\r\n            if (user && user.username) {\r\n                try {\r\n                    const response = await getQuizList(user.username);\r\n                    console.log('Fetched quizzes:', response.data); // Log the response\r\n                    // Ensure the response data is always an array\r\n                    if (Array.isArray(response.data)) {\r\n                        setQuizzes(response.data);\r\n                    } else {\r\n                        console.error('Unexpected response format:', response.data);\r\n                        setQuizzes([]);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching quizzes:', error);\r\n                    setQuizzes([]);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchQuizzes();\r\n    }, [user]);\r\n\r\n    const handleQuizClick = (title) => {\r\n        navigate(`/join-quiz?title=${encodeURIComponent(title)}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-4\">\r\n            <h2 className=\"text-2xl font-bold mb-6\">Your Quizzes</h2>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n                {quizzes.map((quiz) => (\r\n                    <div\r\n                        key={quiz._id}\r\n                        className=\"bg-white p-6 rounded-lg shadow-lg cursor-pointer hover:bg-gray-100 transition\"\r\n                        onClick={() => handleQuizClick(quiz.title)}\r\n                    >\r\n                        <h3 className=\"text-xl font-bold mb-2\">{quiz.title}</h3>\r\n                        <p className=\"text-gray-600 text-sm\">Created by: {quiz.creatorId}</p>\r\n                        <p className=\"text-gray-500 text-sm\">Questions: {quiz.questions.length}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}