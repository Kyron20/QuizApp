{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koolk\\\\Documents\\\\QuizApplication\\\\QuizApp\\\\frontend\\\\src\\\\components\\\\quizlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getQuizList } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizList({\n  user\n}) {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuizzes = async () => {\n      if (user && user.username) {\n        try {\n          const response = await getQuizList(user.username);\n          console.log('Fetched quizzes:', response.data); // Log the response\n          // Ensure the response data is always an array\n          const data = Array.isArray(response.data) ? response.data : [response.data];\n          setQuizzes(data);\n        } catch (error) {\n          console.error('Error fetching quizzes:', error);\n          setQuizzes([]);\n        }\n      }\n    };\n    fetchQuizzes();\n  }, [user]);\n  const handleQuizClick = title => {\n    navigate(`/join-quiz?title=${encodeURIComponent(title)}`);\n  };\n\n  // Inline styles for responsive text\n  const titleStyle = {\n    fontSize: 'clamp(1rem, 2vw, 1.5rem)',\n    // Responsive font size\n    whiteSpace: 'nowrap',\n    // Prevent text from wrapping\n    overflow: 'hidden',\n    // Hide overflow text\n    textOverflow: 'ellipsis' // Optional: adds \"...\" if text overflows (not used here but could be used with nowrap)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Your Quizzes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\",\n      children: quizzes.map(quiz => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg cursor-pointer hover:bg-gray-100 transition flex flex-col justify-between\",\n        onClick: () => handleQuizClick(quiz.title),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-2 flex-grow\",\n          style: titleStyle,\n          children: quiz.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-sm\",\n          children: [\"Created by: \", quiz.creatorId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-sm\",\n          children: [\"Questions: \", quiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, quiz._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizList, \"jPrdyU9I4zOKNszaSHtUMQk0ByQ=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizList;\nexport default QuizList;\nvar _c;\n$RefreshReg$(_c, \"QuizList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getQuizList","jsxDEV","_jsxDEV","QuizList","user","_s","quizzes","setQuizzes","navigate","fetchQuizzes","username","response","console","log","data","Array","isArray","error","handleQuizClick","title","encodeURIComponent","titleStyle","fontSize","whiteSpace","overflow","textOverflow","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","quiz","onClick","style","creatorId","questions","length","_id","_c","$RefreshReg$"],"sources":["C:/Users/koolk/Documents/QuizApplication/QuizApp/frontend/src/components/quizlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getQuizList } from '../api';\r\n\r\nfunction QuizList({ user }) {\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchQuizzes = async () => {\r\n            if (user && user.username) {\r\n                try {\r\n                    const response = await getQuizList(user.username);\r\n                    console.log('Fetched quizzes:', response.data); // Log the response\r\n                    // Ensure the response data is always an array\r\n                    const data = Array.isArray(response.data) ? response.data : [response.data];\r\n                    setQuizzes(data);\r\n                } catch (error) {\r\n                    console.error('Error fetching quizzes:', error);\r\n                    setQuizzes([]);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchQuizzes();\r\n    }, [user]);\r\n\r\n    const handleQuizClick = (title) => {\r\n        navigate(`/join-quiz?title=${encodeURIComponent(title)}`);\r\n    };\r\n\r\n    // Inline styles for responsive text\r\n    const titleStyle = {\r\n        fontSize: 'clamp(1rem, 2vw, 1.5rem)', // Responsive font size\r\n        whiteSpace: 'nowrap',  // Prevent text from wrapping\r\n        overflow: 'hidden',    // Hide overflow text\r\n        textOverflow: 'ellipsis', // Optional: adds \"...\" if text overflows (not used here but could be used with nowrap)\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-4\">\r\n            <h2 className=\"text-2xl font-bold mb-6\">Your Quizzes</h2>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n                {quizzes.map((quiz) => (\r\n                    <div\r\n                        key={quiz._id}\r\n                        className=\"bg-white p-6 rounded-lg shadow-lg cursor-pointer hover:bg-gray-100 transition flex flex-col justify-between\"\r\n                        onClick={() => handleQuizClick(quiz.title)}\r\n                    >\r\n                        <h3 className=\"font-bold mb-2 flex-grow\" style={titleStyle}>\r\n                            {quiz.title}\r\n                        </h3>\r\n                        <p className=\"text-gray-600 text-sm\">Created by: {quiz.creatorId}</p>\r\n                        <p className=\"text-gray-500 text-sm\">Questions: {quiz.questions.length}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}